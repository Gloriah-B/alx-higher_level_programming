def add_integer(a, b=98):
    """
    Return the integer addition of a and b.

    Float arguments are typecasted to ints before addition is performed.

    Raises:
        TypeError: If either of a or b is a non-integer and non-float.
        OverflowError: If the value is infinity.
        ValueError: If the value is NaN.

    Examples:
    >>> add_integer(2, 3)
    5
    >>> add_integer(-10, 5)
    -5
    >>> add_integer(2.5, 3)
    5
    >>> add_integer(2, 3.5)
    5
    >>> add_integer()
    98
    >>> add_integer(0)
    98
    >>> add_integer(2.3, None)
    Traceback (most recent call last):
    TypeError: b must be an integer
    >>> add_integer("hello", "there")
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
    """
    if not isinstance(a, (int, float)):
        raise TypeError("a must be an integer or a float")
    if not isinstance(b, (int, float)):
        raise TypeError("b must be an integer or a float")
    
    return int(a) + int(b)
